Feed parsing
============

Download and parse a feed
-------------------------

Try this example from a command line script:

```php
<?php

require 'path/to/PicoFeed.php';

use PicoFeed\Reader;

$reader = new Reader;

// Try to discover the XML feed automatically
$reader->download('http://bbc.co.uk/news');

$parser = $reader->getParser();

if ($parser !== false) {

    $feed = $parser->execute();

    if ($feed !== false) {
        echo $feed;
    }
}
```

- The method `getParser()` return `false` when there is something wrong during the download or the feed detection
- The call `$parser->execute()` return `false` when there is a parsing error

In your terminal you will got an output like that:

```
Feed::id = http://www.bbc.co.uk/news/#sa-ns_mchannel=rss&ns_source=PublicRSS20-sa
Feed::title = BBC News - Home
Feed::url = http://www.bbc.co.uk/news/#sa-ns_mchannel=rss&ns_source=PublicRSS20-sa
Feed::date = 1399934742
Feed::language = en-gb
Feed::items = 84 items
----
Item::id = e411a646
Item::title = Nigeria rejects captive girls 'swap'
Item::url = http://www.bbc.co.uk/news/world-africa-27386285#sa-ns_mchannel=rss&ns_source=PublicRSS20-sa
Item::date = 1399933404
Item::language = en-gb
Item::author =
Item::enclosure_url =
Item::enclosure_type =
Item::content = <p>Nigeria insists i... (152 bytes)
----
Item::id = 6c50fcf2
Item::title = Woman tells of Harris 'assaults'
Item::url = http://www.bbc.co.uk/news/uk-27371573#sa-ns_mchannel=rss&ns_source=PublicRSS20-sa
Item::date = 1399908906
Item::language = en-gb
Item::author =
Item::enclosure_url =
Item::enclosure_type =
Item::content = <p>A woman tells the... (142 bytes)
...........
```

This ouput is generated by the magic method `__toString()` of the class `Feed` and `Item`.
All properties are public and they are also available with getter methods:

```php

// Examples for the feed:
echo $feed->getId();              // Unique feed id
echo $feed->getTitle();           // Feed title
echo $feed->getUrl();             // Feed url
echo $feed->getDate();            // Feed last updated date
echo $feed->getLanguage();        // Feed language
echo $feed->getDescription();     // Feed description
echo $feed->getLogo();            // Feed logo (can be a large image, different from icon)
echo $feed->getItems();           // List of items

// Examples for items:
echo $feed->items[0]->getId();
echo $feed->items[0]->getTitle();
echo $feed->items[0]->getUrl();
echo $feed->items[0]->getDate();
echo $feed->items[0]->getLanguage();
echo $feed->items[0]->getAuthor();
echo $feed->items[0]->getEnclosureUrl();
echo $feed->items[0]->getEnclosureType();
echo $feed->items[0]->getContent();
```

Handle HTTP cache
-----------------

To avoid downloading and parsing the feed each time, it's a good idea to handle the HTTP caching:

1. After the first HTTP request, we save somewhere (in a database) the headers Etag and Last-Modified for the next checks
2. If the feed is not modified, we don't need to parse again the feed

Example:

```php
use PicoFeed\Reader;

$reader = new Reader;

// Get last modified infos from previous requests
$lastModified = '...';
$etag = '...';

// Download directly the feed
$resource = $reader->download('http://linuxfr.org/news.atom', $lastModified, $etag);

// Return true is the feed has changed
if ($resource->isModified()) {

    $parser = $reader->getParser();

    if ($parser !== false) {

        $feed = $parser->execute();

        if ($feed !== false) {

            // Save cache infos for the next request
            $lastModified = $resource->getLastModified();
            $etag = $resource->getEtag();
        }
    }
}
```

Use a custom user agent
-----------------------

You have to define a custom configuration for that:

```php
use PicoFeed\Reader;
use PicoFeed\Config;

$config = new Config;
$config->setClientUserAgent('My RSS Reader');

$reader = new Reader($config);
...
```

The complete config parameters are [described here](config.markdown).

Set a custom timezone
---------------------

By default, the timezone used is UTC but you can define a custom timezone for the logging and item parsing.

```php
use PicoFeed\Reader;
use PicoFeed\Config;

$config = new Config;
$config->setTimezone('Europe/Paris');

$reader = new Reader($config);
...
```
[List of supported TimeZones](http://php.net/manual/en/timezones.php)
